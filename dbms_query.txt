https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html#function_max
# Assing a foreign key 

->  ALTER TABLE `sp` ADD FOREIGN KEY `(PNO)`REFERENCRS`P``(PNO)` ON DELETE RESTICT ON UPDATE RESTICT;
--------------------------------------------------------------------------------------------------------
#insert data in p table

-> 
----------------------------------------------------------------------------------------------------------
#insert data in sp table

-> INSERT INTO `sp` (`sno`, `pno`, `qty`) VALUES ('s1', 'p1', '300');
-> INSERT INTO `sp` (`sno`, `pno`, `qty`) VALUES ('s1', 'p2', '200'), ('s1', 'p3', '400'), ('s1', 'p4', '200'), ('s1', 'p5', '100'), ('s1', 'p6', '100'), ('s2', 'p1', '300'), ('s2', 'p2', '400'), ('s3', 'p2', '200'), ('s4', 'p2', '200'), ('s4', 'p4', '300'), ('s4', 'p5', '400');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#insert data in s table

-> INSERT INTO `s` (`sno`, `sname`, `s_status`, `s_city`) VALUES ('s1', 'smith', '20', 'london');
-> INSERT INTO `s` (`sno`, `sname`, `s_status`, `s_city`) VALUES ('s2', 'jones', '10', 'paris'), ('s3', 'blake', '30', 'paris'), ('s4', 'clark', '20', 'london'), ('s5', 'adams', '30', 'athens');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#create a new table demo and add new row d_city using alter key.

-> ALTER TABLE `demo` ADD `d_city` VARCHAR(20) NOT NULL AFTER `d_name`;
-------------------------------------------------------------------------
#sno & pno combination is primary key.

->ALTER TABLE sp ADD PRIMARY KEY(sno,pno);
-----------------------------------------------------------------------------------------
# 2.1 Show all part located at london city.

-> SELECT `pno`, `pname`, `color`, `weight`, `p_city` FROM `p` WHERE P_city="london";
----------------------------------------------------------------------------------------
# 2.2 Show maximum weight part name.

-> SELECT pname FROM `p` WHERE weight = (SELECT MAX(weight)FROM p);
-----------------------------------------------------------------------------------------
# 2.3 Show all parts name,part number for part color = red. 

-> SELECT pname,pno FROM `p` WHERE color="red";
-------------------------------------------------------------------------------------------
# 2.4 show suppler name,suppler city who suppler part qty more then 200....

-> SELECT DISTINCT s.sname, s.s_city
	FROM s s JOIN sp p ON s.sno = p.sno WHERE p.qty > 200;

							( OR )

-> 	SELECT DISTINCT s.sname,s.s_city
	from s,sp
    WHERE s.no=sp.sno
    AND sp.qty > 200;						
----------------------------------------------------------------------------------------------
# 2.5 show second highest weight of part.

-> SELECT max(Weight) FROM p WHERE Weight < (SELECT MAX(Weight) FROM p);
                  
				  ( OR )
				  
->  SELECT DISTINCT Weight
	FROM p
	ORDER BY Weight DESC
	LIMIT 1 OFFSET 1;

-----------------------------------------------------------------------------------------------
# 3.6 show suppler no and qty for part supply for highest weight part.

-> SELECT p.pno,sp.sno,sp.qty from sp,p WHERE sp.pno=p.pno AND weight=(SELECT MAX(p.weight)FROM p);

-------------------------------------------------------------------------------------------------
# 3.7 show suppler no and qty for part color  is "RED" supply.

-> SELECT  s.sname ,sp.qty 
	from s,sp,p
    WHERE s.sno=sp.sno
    AND p.pno=sp.pno
    AND p.color ="red";

--------------------------------------------------------------------------------------------------
# 3.8 show suppler name,part city and qty for suppler status is less then 30 shipment supply.

-> SELECT DISTINCT s.sname,p.p_city,sp.qty
	 FROM s,sp,p
     WHERE s.sno=sp.sno
     AND p.pno =sp.pno
     AND s.s_status < 30;
	 	
	
---------------------------------------------------------------------------------------------------
# 3.9 show each suppler total qty supply.

-> SELECT sno, SUM(qty) AS Total_Qty
	 FROM sp
	 GROUP BY sp.sno;
	
------------------------------------------------------------------------------------------------------
# 3.10 show each part total qty supply.

-> SELECT pno, SUM(qty) AS Total_Qty
	 FROM sp
	 GROUP BY sp.pno;

--------------------------------------------------------------------------------------------------------
# 4.11 show each part names total qty supply.

-> SELECT p.pname AS Part_Name,sum(qty) 
		FROM p,sp 
		WHERE p.pno=sp.pno 
		GROUP BY sp.pno;

-------------------------------------------------------------------------------------------------------------
# 4.12 show each supper whose supper numberis less then 's4' give total qty supply by each suppler.

-> SELECT sno ,SUM(qty)
	FROM sp 
    WHERE sno < 's4'
    GROUP BY sno;

---------------------------------------------------------------------------------------------------------------
# 4.13 show each supper whose supper status is 20 give total qty supply by each supper.

-> SELECT s.sno AS Supplers,SUM(qty) AS Total_qty
	FROM s,sp
    WHERE s.sno=sp.sno 
    AND s.s_status = 20
    GROUP BY sp.sno;

----------------------------------------------------------------------------------------------------------------
# 5 Sql Table Are Created.

----------------------------------------------------------------------------------------------------------------
# 6 SELECT 
  e1.employee_name AS "Employee Name",
  d1.department_name AS "Employee Department Name",
  e2.employee_name AS "Boss Name",
  d2.department_name AS "Boss Department Name"
FROM 
  employees e1
  JOIN departments d1 ON e1.department_id = d1.department_id
  JOIN employees e2 ON e1.boss_id = e2.employee_id
  JOIN departments d2 ON e2.department_id = d2.department_id;
  
 -> withou join keyword
  
  SELECT 
  e.employee_name AS "Employee Name",
  (SELECT d.department_name FROM departments d WHERE d.department_id = e.department_id) AS "Employee Department Name",
  (SELECT e2.employee_name FROM employees e2 WHERE e2.employee_id = e.boss_id) AS "Boss Name",
  (SELECT d2.department_name FROM departments d2 WHERE d2.department_id = (SELECT e2.department_id FROM employees e2 WHERE e2.employee_id = e.boss_id)) AS "Boss Department Name"
FROM 
  employees e;
  
  -> easy way
  
  SELECT 
  e.employee_name AS "Employee Name",
  get_department_name(e.department_id) AS "Employee Department Name",
  get_employee_name(e.boss_id) AS "Boss Name",
  get_department_name(get_employee_department_id(e.boss_id)) AS "Boss Department Name"
FROM 
  employees e;
  
  
  SELECT DISTINCT emp.Emp_name ,Boss_emp.Emp_name AS "Boss_Name",dept.Dept_name,dept.Dept_name AS "Boss_Dept"
	FROM emp,emp as Boss_emp,dept
    WHERE emp.Emp_boss_id=Boss_emp.Emp_id
    AND emp.Emp_Dept_id=dept.Dept_id
    AND emp.Emp_id=dept.Dept_id